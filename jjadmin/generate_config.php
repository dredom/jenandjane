<?php
/**
 * Generate a config PHP file with item codes and product ids.
 * Run this after adding, removing or reordering items in show.config.
 * 
 *   www.jenandjane.com/jjadmin?generate_config?site=arm
 *
 * Parameter: site=...
 * Input: jewel/site/show.config
 * Output: jewel/site/show.config.php
 * 2009-08
 */
 require '../init.php';
 require DOCPATH.'jewel/DbManager.class.php';
 require DOCPATH.'jewel/ProductDataManager.class.php';
 doit();
function doit() {
	if ( !isset($_GET['site']) ) {
		$site = '';
	} else {
		$site = $_GET['site'];
	}
	if (strlen($site) == 0 || strpos('neck ear arm ankle', $site) === false) {
		p(' Required parameter: &amp;site=neck|ear|arm|ankle ');
		return;
	}
	p('Generate config.php for site:'.$site);
 	$configFilename = DOCPATH.'jewel/'.$site.'/show.config';
	if (!file_exists($configFilename)) {
		p($configFilename.' input file does not exist. Please upload it.');
		return;
	}
	backupFile($configFilename.'.php');
	generateShowConfigPhp($configFilename);
	p('Done.');
}
$writeCount = 0;
function generateShowConfigPhp($configFilename) {
	global $writeCount;
	$phpFilename = $configFilename.'.php';
	$lines = file($configFilename);
	$readCount = count($lines);
	p(" Read $readCount lines from $configFilename");
	$php = buildShowConfigPhp($lines);
	$handle = fopen($phpFilename, 'w');	// overwrite
	$len = fwrite($handle, $php);
	fclose($handle);
 	clearstatcache();
	p("Generated $phpFilename with $writeCount items, $len bytes");
	Logger::info("Generated $phpFilename with $writeCount items, $len bytes");
}
function buildShowConfigPhp($lines) {
	global $writeCount;
	$mgr = new ProductDataManager;
	$php = '<?php /* Generated by '.__FILE__.strftime(' %Y-%m-%d %H:%M')." */\n";
	$php .= '$config = array('."\n";
	$comma = '';
	foreach ($lines as $line) {
		$code = trim(strtok($line, ' ,'));
		try {
			$product = $mgr->getProductByCode($code);
			$php .= $comma;
			$php .= $product->id."=>'".$code."'";
			$writeCount++;
			$comma = ",\n";
		} catch (Exception $e) {
			p("$code failed: ".'<font color="red">'.$e->getMessage().'</font>');
		}
	}
	$php .= "\n);\n?>";
	return $php;
}
function backupFile($filename) {
	if (!file_exists($filename)) {
		return;
	}
	$old = $filename . '.old.php';
 	if (file_exists($old))
 		unlink($old);
 	if (copy($filename, $old)) {
 		p(" Backup to $old ");
 	} else {
 		p(" Backup to $old failed! Continuing...");
 	}
 	clearstatcache();
}
function p($s) {
	echo "$s <br>\n";
}
?>